<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Listar Carritos</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        .productos-container {
            max-height: 400px;
            overflow-y: auto;
        }

        .card {
            height: 300px;
        }

        .spinner {
            display: none;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="d-flex justify-content-between align-items-center my-4">
            <h1>Mi carrito</h1>
            <h2 id="precioTotal"></h2>
        </div>
        <input hidden id="idCarrito" value="{{cartId}}"></input>
        <div id="carritos" class="productos-container"></div>
        <div id="message" class="mt-3"></div>
        <div id="volverRutas" class="my-4"></div>
        <div id="generarTicket" class="my-4"></div>
        <div class="spinner-border text-primary" role="status" id="loadingSpinner">
            <span class="sr-only">Cargando...</span>
        </div>
    </div>

    <script>
        const cartId = document.getElementById("idCarrito").value;

        async function cargarCarrito(cartId) {
            const loadingSpinner = document.getElementById('loadingSpinner');
            const messageDiv = document.getElementById('message');

            loadingSpinner.style.display = 'block'; // Mostrar spinner
            messageDiv.innerHTML = ''; // Limpiar mensajes previos

            try {
                const response = await fetch(`/api/carts/${cartId}`);

                if (!response.ok) {
                    throw new Error('Error al obtener el carrito');
                }

                const carrito = await response.json();

                const contenedorCarritos = document.getElementById('carritos');
                contenedorCarritos.innerHTML = '';

                if (!Array.isArray(carrito) || carrito.length === 0) {
                    contenedorCarritos.innerHTML = '<p>No hay productos en el carrito.</p>';
                    return; // Salimos de la función si no hay productos
                }

                let precioTotal = 0;


                carrito.forEach(item => {
                    const itemTotal = item.product.price * item.quantity;
                    precioTotal += itemTotal;

                    const productoDiv = document.createElement('div');
                    productoDiv.classList.add('card', 'my-3');
                    productoDiv.innerHTML = `
                        <div class="card-header">
                            Producto: ${item.product.title}
                        </div>
                        <div class="card-body">
                            <p>Precio unitario: $${item.product.price}</p>
                            <p>Cantidad: ${item.quantity}</p>
                            <p>Total: $${itemTotal}</p>
                            <button class="btn btn-danger btn-sm" onclick="eliminarDelCarrito('${cartId}', '${item.product._id}')">Eliminar</button>
                        </div>
                    `;

                    contenedorCarritos.appendChild(productoDiv);
                });

                document.getElementById('precioTotal').innerText = `Precio total: $${precioTotal}`;

                const volverRutasDiv = document.getElementById('volverRutas');
                volverRutasDiv.innerHTML = `
                    <button class="btn btn-primary" onclick="window.location.href='/products'">Sección de Productos</button>
                `;

                const generarTicketDiv = document.getElementById('generarTicket');
                generarTicketDiv.innerHTML = `
                    <button class="btn btn-primary" onclick="window.location.href='/api/carts/${cartId}/purchase'">Generar ticket</button>
                `;
            } catch (error) {
                console.error('Error al cargar el carrito:', error);
                messageDiv.innerHTML = '<div class="alert alert-danger">Error al cargar el carrito.</div>';
            } finally {
                loadingSpinner.style.display = 'none'; // Ocultar spinner
            }
        }

        async function eliminarDelCarrito(cartId, productId) {
            try {
                const response = await fetch(`/api/carts/${cartId}/product/${productId}`, {
                    method: 'DELETE'
                });
                const result = await response.json();

                if (response.ok) {
                    alert('Producto eliminado del carrito exitosamente');
                    cargarCarrito(cartId);
                } else {
                    alert('Error al eliminar producto del carrito');
                    console.error(result);
                }
            } catch (error) {
                console.error('Error al eliminar producto del carrito:', error);
                alert('Error al eliminar producto del carrito');
            }
        }

        // Cargar el carrito al cargar la página
        cargarCarrito(cartId);
    </script>
</body>

</html>